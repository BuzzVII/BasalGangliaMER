function writeMERsimulation(N,Distribution,Distpara1, Distpara2, Distpara3,...
    DataMER,DataPP,NoiseModel,NoisePara,Nid,Npp)
%function writeMERsimulation(N,Distribution,Distpara1, Distpara2, Distpara3,...
%DataMER,DataPP,NoiseModel,NoisePara,Nid,Npp)
%This function creates a file containing the pp data and the MER data as
%binary data and adds the appropriate text header to identify the data.

    filename=['h:\Data\PP synch\ppsim',num2str(Nid),'.dat'];
    fid=fopen(filename,'w');
    %Create header for MER parameters
    Header1=['date:',date,';',...       
        'fs:24000;',...                 %sample rate Hz
        'num_neurons:',num2str(N),';',...
        'neuron_model:Rubin and Terman 2004;',...
        'noise_model:',NoiseModel,';',...
        'noise_para:',NoisePara,';',...
        'post_low_filter_type:2nd order Butterworth;',...
        'post_low_filter_params:500;',...
        'post_high_filter_type: 4th order Butterworth;',...
        'post_high_filter_params:5000;',...
        'distribution:',Distribution,';',...
        'distribution_parameters:[',num2str(Distpara1),...
        ',',num2str(Distpara2),...
        ',',num2str(Distpara3),'];',...
        'data_endianity: L;',...
        'data_type:float;',...
        'data_width: 64;'];
    %Create header for PP parameters
    Header2=['%start_PP_Header%;%;',...
        'pp_num_neurons:',num2str(Npp),...
        ';pp_data_endianity: L;',...
        'pp_data_type:int;',...
        'pp_data_width: 64;',...
        'pp_length:',num2str(length(DataPP)),';',...
        '%START_PP_DATA%'];
    
    %add combined header to file
    fprintf(fid,'%s \n%s',Header1,Header2);
    %write PP data
    fwrite(fid,DataPP,'int64');
    %Identify start of MER data
    fprintf(fid,'\n%s','%START_DATA%');
    %wrtie MER data
    fwrite(fid,DataMER,'float64');
    
    fclose(fid);
    
    